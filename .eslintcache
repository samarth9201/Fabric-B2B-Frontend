[{"C:\\Users\\amanb\\Desktop\\LS\\frontend\\src\\index.js":"1","C:\\Users\\amanb\\Desktop\\LS\\frontend\\src\\App.js":"2","C:\\Users\\amanb\\Desktop\\LS\\frontend\\src\\screens\\LogIn\\NewLogin.js":"3","C:\\Users\\amanb\\Desktop\\LS\\frontend\\src\\screens\\SignUp\\Signup.js":"4","C:\\Users\\amanb\\Desktop\\LS\\frontend\\src\\screens\\SignUp\\NewSignUp.js":"5","C:\\Users\\amanb\\Desktop\\LS\\frontend\\src\\screens\\HomePage\\HomePage.js":"6","C:\\Users\\amanb\\Desktop\\LS\\frontend\\src\\screens\\SignUp\\components\\Verify.js":"7","C:\\Users\\amanb\\Desktop\\LS\\frontend\\src\\screens\\SignUp\\components\\NewVerify.js":"8","C:\\Users\\amanb\\Desktop\\LS\\frontend\\src\\screens\\Dashboard\\Regular Dashboards\\Exchnage.js":"9","C:\\Users\\amanb\\Desktop\\LS\\frontend\\src\\screens\\SignUp\\password.js":"10","C:\\Users\\amanb\\Desktop\\LS\\frontend\\src\\screens\\Dashboard\\Admin Dashboard\\admin.js":"11","C:\\Users\\amanb\\Desktop\\LS\\frontend\\src\\screens\\LogIn\\Login.js":"12","C:\\Users\\amanb\\Desktop\\LS\\frontend\\src\\screens\\Dashboard\\Regular Dashboards\\TransferMoney.js":"13","C:\\Users\\amanb\\Desktop\\LS\\frontend\\src\\data.js":"14","C:\\Users\\amanb\\Desktop\\LS\\frontend\\src\\screens\\SignUp\\components\\signup-bottom.js":"15","C:\\Users\\amanb\\Desktop\\LS\\frontend\\src\\screens\\NavBar.js":"16","C:\\Users\\amanb\\Desktop\\LS\\frontend\\src\\screens\\styles.js":"17","C:\\Users\\amanb\\Desktop\\LS\\frontend\\src\\screens\\SignUp\\components\\signup-top.js":"18","C:\\Users\\amanb\\Desktop\\LS\\frontend\\src\\screens\\Dashboard\\Regular Dashboards\\DashNav.js":"19","C:\\Users\\amanb\\Desktop\\LS\\frontend\\src\\screens\\Dashboard\\Regular Dashboards\\CurrencyRates.js":"20","C:\\Users\\amanb\\Desktop\\LS\\frontend\\src\\APi\\userDetails.js":"21","C:\\Users\\amanb\\Desktop\\LS\\frontend\\src\\screens\\Dashboard\\Admin Dashboard\\adminNav.js":"22","C:\\Users\\amanb\\Desktop\\LS\\frontend\\src\\screens\\Dashboard\\Regular Dashboards\\Currency Exchange\\CurrencyExchange.js":"23","C:\\Users\\amanb\\Desktop\\LS\\frontend\\src\\APi\\api.js":"24","C:\\Users\\amanb\\Desktop\\LS\\frontend\\src\\screens\\Dashboard\\Regular Dashboards\\Currency Exchange\\CurrencyRow.js":"25","C:\\Users\\amanb\\Desktop\\LS\\frontend\\src\\screens\\Dashboard\\Regular Dashboards\\Chart.js":"26"},{"size":229,"mtime":1609151192579,"results":"27","hashOfConfig":"28"},{"size":1930,"mtime":1613674239054,"results":"29","hashOfConfig":"28"},{"size":4664,"mtime":1614842816126,"results":"30","hashOfConfig":"28"},{"size":2891,"mtime":1613062618239,"results":"31","hashOfConfig":"28"},{"size":3435,"mtime":1614842819580,"results":"32","hashOfConfig":"28"},{"size":452,"mtime":1614953842437,"results":"33","hashOfConfig":"28"},{"size":3499,"mtime":1614842803143,"results":"34","hashOfConfig":"28"},{"size":3685,"mtime":1613674881603,"results":"35","hashOfConfig":"28"},{"size":461,"mtime":1613658984106,"results":"36","hashOfConfig":"28"},{"size":6430,"mtime":1614842805730,"results":"37","hashOfConfig":"28"},{"size":8563,"mtime":1613471932937,"results":"38","hashOfConfig":"28"},{"size":4125,"mtime":1614954153946,"results":"39","hashOfConfig":"28"},{"size":5657,"mtime":1614844398872,"results":"40","hashOfConfig":"28"},{"size":0,"mtime":1610360468434,"results":"41","hashOfConfig":"28"},{"size":510,"mtime":1613054942090,"results":"42","hashOfConfig":"28"},{"size":793,"mtime":1613675790479,"results":"43","hashOfConfig":"28"},{"size":1470,"mtime":1613672971515,"results":"44","hashOfConfig":"28"},{"size":1014,"mtime":1613672570701,"results":"45","hashOfConfig":"28"},{"size":852,"mtime":1614953793387,"results":"46","hashOfConfig":"28"},{"size":207,"mtime":1614953511736,"results":"47","hashOfConfig":"28"},{"size":55,"mtime":1610360340627,"results":"48","hashOfConfig":"28"},{"size":759,"mtime":1613296113441,"results":"49","hashOfConfig":"28"},{"size":3793,"mtime":1614758414724,"results":"50","hashOfConfig":"28"},{"size":2249,"mtime":1614844398343,"results":"51","hashOfConfig":"28"},{"size":1397,"mtime":1613660445272,"results":"52","hashOfConfig":"28"},{"size":507,"mtime":1614844398345,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1vr96xo",{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"56"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"56"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"56"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"56"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"56"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"56"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"56"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"56"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"56"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"56"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\amanb\\Desktop\\LS\\frontend\\src\\index.js",[],["121","122"],"C:\\Users\\amanb\\Desktop\\LS\\frontend\\src\\App.js",["123","124","125"],"import React from 'react'\r\nimport LogIn from './screens/LogIn/Login'\r\nimport {BrowserRouter as Router,Switch,Route} from \"react-router-dom\";\r\nimport NewSignUp from './screens/SignUp/NewSignUp';\r\nimport Password from './screens/SignUp/password';\r\nimport HomePage from './screens/HomePage/HomePage';\r\nimport Verify from './screens/SignUp/components/Verify';\r\nimport TransferMoney from './screens/Dashboard/Regular Dashboards/TransferMoney'\r\nimport Admin from './screens/Dashboard/Admin Dashboard/admin'\r\nimport SignInSide from './screens/LogIn/NewLogin'\r\nimport Exchnage from './screens/Dashboard/Regular Dashboards/Exchnage';\r\nimport Signup from './screens/SignUp/Signup' \r\nimport NewVerify from './screens/SignUp/components/NewVerify';\r\nfunction App() {\r\n    return (\r\n        <Router>\r\n            <main>\r\n                <Switch>\r\n                    <Route path=\"/\" exact>\r\n                       <SignInSide/>\r\n                    </Route>\r\n                    <Route path=\"/signup\" exact >\r\n                        <NewSignUp/>\r\n                    </Route>\r\n                    <Route path=\"/signup/verify\" exact >\r\n                       <NewVerify/>\r\n                    </Route>\r\n                    <Route path=\"/signup/verify/password\" exact >\r\n                        <Password/>\r\n                    </Route>\r\n                    <Route path=\"/homepage\" exact >\r\n                        <HomePage/>\r\n                    </Route>\r\n                    <Route path=\"/homepage/transfer\" exact >\r\n                        <TransferMoney/>\r\n                    </Route>\r\n                    <Route path=\"/homepage/exchange\" exact >\r\n                        <Exchnage/>\r\n                    </Route>\r\n                    <Route path=\"/homepage/admin\" exact >\r\n                        <Admin/>\r\n                    </Route>\r\n\r\n                </Switch>\r\n            </main>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default App\r\n","C:\\Users\\amanb\\Desktop\\LS\\frontend\\src\\screens\\LogIn\\NewLogin.js",["126","127","128","129","130","131","132","133","134"],"import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {Link} from \"react-router-dom\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {useForm} from 'react-hook-form'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { login } from '../../APi/api';\r\nimport below from '../../images/below.png';\r\nimport logo from '../../images/logo.png'\r\nimport './Login.css'\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100vh',\r\n  },\r\n  \r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    marginTop:\"100px\"\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  rightSide:{\r\n      backgroundColor:'white',\r\n      \r\n  },\r\n  \r\n  \r\n\r\n}));\r\n\r\nexport default function SignInSide() {\r\n\r\n  const { register, handleSubmit,errors } = useForm();\r\n  \r\n    const onSubmit = async (data) =>{\r\n      \r\n      const signIn = await login(data);\r\n            if(signIn.code==200){\r\n            changeScreen()\r\n            }\r\n            else{\r\n              console.log(\"unauthorized\");\r\n            }\r\n            \r\n      }\r\n\r\nconst changeScreen = ()=>{\r\n  window.location.href +=\"homepage\";\r\n}\r\n\r\n\r\n\r\n\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container component=\"main\" className={classes.root}>\r\n      <CssBaseline />\r\n      <Grid item xs={false} sm={4} md={7} className=\"left-side\"  >\r\n      <img src={logo} alt=\"Below image\" className=\"logo\"/> <br/>\r\n        <img src={below} alt=\"Below image\" className=\"below\"/>\r\n      </Grid>\r\n      <Grid item xs={12} sm={8} md={5}  elevation={2} square className=\"right-side\">\r\n        <div className={classes.paper}>\r\n          \r\n          <Typography component=\"h1\" variant=\"h5\" className ={classes.title}>\r\n            <h1 className=\"title\">Login</h1>\r\n          </Typography>\r\n          <form className={classes.form} noValidate onSubmit={handleSubmit(onSubmit)} >\r\n            <TextField\r\n            className='textF'\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              autoComplete=\"off\"\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              inputRef={register({\r\n                required: true,\r\n                pattern: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n                message:\"Please enter a valid email id\"\r\n              })}\r\n              autoFocus\r\n            />\r\n            <TextField\r\n              className=\"textF \"\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              inputRef={register({required:true})}\r\n              autoComplete=\"current-password\"\r\n            />\r\n            <TextField\r\n              className=\"textF \"\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              autoComplete=\"off\"\r\n              required\r\n              name=\"pvtKey\"\r\n              label=\"Private Key\"\r\n              type=\"text\"\r\n              id=\"pvtKey\"\r\n              inputRef={register({required:true})}\r\n            />\r\n            \r\n            <Button\r\n              type=\"submit\"\r\n             \r\n              variant=\"contained\"\r\n             \r\n              className=\"submit\"\r\n            >\r\n              Sign In\r\n            </Button>\r\n            \r\n            <Box mt={5}>\r\n              <p className=\"text-below\">If you dont have an account then,   <Link to=\"signup\" variant=\"body2\" className=\"link\">  { \"Sign Up\"}</Link></p>\r\n            </Box>\r\n          </form>\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}","C:\\Users\\amanb\\Desktop\\LS\\frontend\\src\\screens\\SignUp\\Signup.js",["135","136","137","138","139","140"],"import React,{useState} from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Container from '@material-ui/core/Container';\r\nimport {useForm} from 'react-hook-form'\r\nimport Signuptop from './components/signup-top';\r\nimport Signupbottom from './components/signup-bottom';\r\nimport useStyles from '../styles'\r\nimport NavBar from '../NavBar';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {verifyEmail} from '../../APi/api'\r\nimport {verifiedData} from '../../data'\r\nimport '../SignUp/signup.css'\r\nexport var emailID=\"\";\r\n\r\nfunction Signup() {\r\n\r\n    const { register, handleSubmit,errors } = useForm();\r\n    \r\n\r\n    const onSubmit =  async (data) =>{ \r\n     \r\n     const verified = await  verifyEmail(data.email);\r\n     console.log(verified);\r\n     console.log(verified.code);\r\n     if(verified.code == 200){\r\n       changeScreen();\r\n     }\r\n     verifiedData.email = data.email;\r\n      \r\n    };\r\n    const changeScreen =()=>{\r\n      window.location.href +=\"/verify\";\r\n    }\r\n\r\n    const classes = useStyles();\r\n\r\n\r\n    return (\r\n     \r\n        <Grid container component=\"main\" className={classes.root}>\r\n         <CssBaseline />\r\n        <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n        <Grid item xs={12} sm={8} md={5} component={classes.paper} elevation={6} square className={classes.rightSide}>\r\n        <div className={classes.paper}>\r\n          <Signuptop/>\r\n            <form className={classes.form} onSubmit={handleSubmit(onSubmit)} >\r\n            <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"off\"\r\n                autoFocus\r\n                inputRef={register({\r\n                          required: \"Emaill is required\",\r\n                          pattern: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n                          message:\"Please enter a valid email id\"\r\n                        })}\r\n                />\r\n                {errors?.email && <p className=\"errors\">Please enter a valid email id</p>}\r\n\r\n                <Button\r\n                    type=\"submit\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.submit}\r\n                   >\r\n                  Send OTP\r\n                </Button>\r\n                \r\n                    <Signupbottom text=\"Aleardy have an account? Login\"/>\r\n\r\n            </form>\r\n          </div>\r\n          </Grid>\r\n          </Grid>\r\n         \r\n    )\r\n}\r\n\r\nexport default Signup\r\n\r\n","C:\\Users\\amanb\\Desktop\\LS\\frontend\\src\\screens\\SignUp\\NewSignUp.js",["141","142","143","144"],"import React from 'react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport {verifyEmail} from '../../APi/api'\r\nimport {verifiedData} from '../../data'\r\nimport {useForm} from 'react-hook-form'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport logo from '../../images/logo.png'\r\nimport below from '../../images/below.png'\r\nimport './signup.css'\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100vh',\r\n  },\r\n  \r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    marginTop:\"200px\"\r\n  },\r\n  avatar: {\r\n    \r\n    backgroundColor: theme.palette.secondary.main,\r\n    \r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  notchedOutline: {\r\n    borderWidth: \"6px\",\r\n    borderColor: \"yellow !important\"\r\n  },\r\n  rightSide:{\r\n    backgroundColor:\"purple\"\r\n  }\r\n\r\n  \r\n  \r\n  \r\n  \r\n\r\n}));\r\n\r\n\r\n\r\nexport default function NewSignUp() {\r\n  const classes = useStyles();\r\n  const { register, handleSubmit,errors } = useForm();\r\n    \r\n\r\n    const onSubmit =  async (data) =>{ \r\n    \r\n     const verified = await  verifyEmail(data.email);\r\n     \r\n     if(verified.code == 200){\r\n       changeScreen();\r\n     }\r\n     verifiedData.email = data.email;\r\n      \r\n    };\r\n    const changeScreen =()=>{\r\n      window.location.href +=\"/verify\";\r\n    }\r\n\r\n  return (\r\n    <Grid container component=\"main\" className={classes.root}>\r\n      <CssBaseline />\r\n      <Grid item xs={false} sm={4} md={7} className=\"left-side\"  >\r\n      <img src={logo} alt=\"Below image\" className=\"logo\"/> <br/>\r\n        <img src={below} alt=\"Below image\" className=\"below\"/>\r\n      </Grid>\r\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={1} square className=\"rightSide\" >\r\n        <div className={classes.paper}>\r\n        <Avatar className={classes.avatar } >\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <h1 className=\"title\">SignUp</h1>\r\n          <form className={classes.form}  onSubmit={handleSubmit(onSubmit)}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              className=\"textf\"\r\n              type=\"email\"\r\n              required\r\n              type=\"email\"\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              InputProps={{\r\n                classes: {\r\n                  notchedOutline: classes.notchedOutline\r\n                }\r\n              }}\r\n              autoComplete=\"email\"\r\n              inputRef={register()}\r\n              autoFocus\r\n                />\r\n                {errors?.email && <p className=\"errors\">Please enter a valid email id</p>}\r\n             \r\n            \r\n                <Button\r\n                    type=\"submit\"\r\n                    \r\n                    variant=\"contained\"\r\n                    \r\n                    className=\"submit\"\r\n                   >\r\n                  Send OTP\r\n                </Button>\r\n            \r\n          </form>\r\n          \r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}","C:\\Users\\amanb\\Desktop\\LS\\frontend\\src\\screens\\HomePage\\HomePage.js",["145","146"],"C:\\Users\\amanb\\Desktop\\LS\\frontend\\src\\screens\\SignUp\\components\\Verify.js",["147","148","149","150","151","152","153","154","155","156"],"import React,{useState} from 'react'\r\nimport useStyles from '../../styles'\r\nimport Signuptop from '../components/signup-top';\r\nimport Signupbottom from '../components/signup-bottom'\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Container from '@material-ui/core/Container';\r\nimport {useForm} from 'react-hook-form'\r\nimport emailID from '../Signup'\r\nimport {verifyOTP} from '../../../APi/api'\r\nimport {verifiedData} from '../../../data'\r\nimport { user } from '../../../APi/userDetails';\r\nimport logo from '../../../images/logo.png'\r\nimport below from '../../../images/below.png'\r\nimport './verify.css'\r\nfunction Verify() {\r\n  \r\n    const { register, handleSubmit ,errors} = useForm();\r\n    \r\n    \r\n\r\n    const onSubmit = async (data) => {\r\n     \r\n      console.log(data.verification);\r\n\r\n      const verified = await verifyOTP(data);\r\n      \r\n      \r\n      if(verified.code == 200){\r\n        user.email = data.email;\r\n        changeScreen();\r\n      }\r\n      else{\r\n        console.log(\"error\");\r\n      }\r\n      \r\n\r\n     \r\n      \r\n    };\r\n    const changeScreen=()=>{\r\n      window.location.href +=\"/password\";\r\n\r\n    }\r\n    \r\n\r\n    const classes = useStyles();\r\n\r\n\r\n    return (\r\n        <Grid container component=\"main\" className={classes.root}>\r\n        <CssBaseline />\r\n            <Grid item xs={false} sm={4} md={7} className=\"left-side\">\r\n          <img src={logo} alt=\"Below image\" className=\"logo\"/> <br/>\r\n            <img src={below} alt=\"Below image\" className=\"below\"/>\r\n          </Grid>\r\n            <Grid item xs={12} sm={8} md={5} component={Paper} elevation={1} square className=\"rightSide\" >\r\n              <div className={classes.paper}>\r\n              <Signuptop/>\r\n              <form className=\"form\" onSubmit={handleSubmit(onSubmit)} noValidate>\r\n                <TextField\r\n                      variant=\"outlined\"\r\n                      margin=\"normal\"\r\n                      className=\"email\"\r\n                      required\r\n                      \r\n                      id=\"email\"\r\n                      label=\"Email Address\"\r\n                      name=\"email\"\r\n                      autoComplete=\"off\"\r\n                      autoFocus\r\n                      type=\"email\"\r\n                      inputRef={register()}\r\n                    />\r\n                    <TextField\r\n                      className=\"otp\"\r\n                      variant=\"outlined\"\r\n                      margin=\"normal\"\r\n                      hidden=\"true\"\r\n                      className=\"email\"\r\n                      \r\n                      id=\"otp\"\r\n                      label=\"OTP\"\r\n                      name=\"verification\"\r\n                      autoComplete=\"off\"\r\n                      required\r\n                      inputRef={register({required:true})}\r\n                />\r\n\r\n                <Button\r\n                    type=\"submit\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.submit}\r\n                    \r\n                >\r\n                  Verify Email\r\n                </Button>\r\n                \r\n                \r\n                \r\n\r\n            </form>\r\n          </div>\r\n          </Grid>\r\n          </Grid>\r\n          \r\n    )\r\n}\r\n\r\nexport default Verify\r\n","C:\\Users\\amanb\\Desktop\\LS\\frontend\\src\\screens\\SignUp\\components\\NewVerify.js",["157","158","159","160","161","162"],"import React from 'react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\n\r\nimport {verifyOTP} from '../../../APi/api'\r\n\r\nimport {useForm} from 'react-hook-form'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport logo from '../../../images/logo.png'\r\nimport below from '../../../images/below.png'\r\nimport './verify.css'\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100vh',\r\n  },\r\n\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    marginTop:\"200px\"\r\n  },\r\n  avatar: {\r\n    \r\n    backgroundColor: theme.palette.secondary.main,\r\n    \r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n}));\r\n\r\n\r\n\r\nexport default function NewVerify() {\r\n  const classes = useStyles();\r\n  const { register, handleSubmit,errors } = useForm();\r\n    \r\n\r\n  const onSubmit = async (data) => {\r\n    console.log(data)\r\n    console.log(data.verification);\r\n\r\n    const verified = await verifyOTP(data);\r\n    console.log(verified.code);\r\n   \r\n    if(verified.code == 200){\r\n      \r\n      changeScreen();\r\n    }\r\n    else{\r\n      console.log(\"error\");\r\n    }\r\n   };\r\n  const changeScreen=()=>{\r\n    window.location.href +=\"/password\";\r\n\r\n  }\r\n  \r\n\r\n  return (\r\n    <Grid container component=\"main\" className={classes.root}>\r\n      <CssBaseline />\r\n      <Grid item xs={false} sm={4} md={7} className=\"left-side\"  >\r\n      <img src={logo} alt=\"Below image\" className=\"logo\"/> <br/>\r\n        <img src={below} alt=\"Below image\" className=\"below\"/>\r\n      </Grid>\r\n      <Grid item xs={12} sm={8} md={5}  elevation={1} square className=\"rightSide\" >\r\n        <div className={classes.paper}>\r\n        <Avatar className={classes.avatar } >\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <h1 className=\"title\">Verify</h1>\r\n          <form className={classes.form}  onSubmit={handleSubmit(onSubmit)}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      margin=\"normal\"\r\n                      className=\"email\"\r\n                      required\r\n                      className=\"email\"\r\n                      id=\"email\"\r\n                      label=\"Email Address\"\r\n                      name=\"email\"\r\n                      autoComplete=\"off\"\r\n                      autoFocus\r\n                      type=\"email\"\r\n                      inputRef={register()}\r\n                    />\r\n                {errors?.email && <p className=\"errors\">Please enter a valid email id</p>}\r\n                <TextField\r\n                      className=\"otp\"\r\n                      variant=\"outlined\"\r\n                      margin=\"normal\"\r\n                      hidden=\"true\"\r\n                      className=\"email\"\r\n                      id=\"otp\"\r\n                      label=\"OTP\"\r\n                      name=\"verification\"\r\n                      autoComplete=\"off\"\r\n                      required\r\n                      inputRef={register({required:true})}\r\n                />\r\n                <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    className=\"submit\"\r\n                   >\r\n                  Verify Email\r\n                </Button>\r\n            \r\n          </form>\r\n          \r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}","C:\\Users\\amanb\\Desktop\\LS\\frontend\\src\\screens\\Dashboard\\Regular Dashboards\\Exchnage.js",["163"],"import React,{useState} from 'react'\r\nimport DashNav from './DashNav'\r\nimport App from './Currency Exchange/CurrencyExchange';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport './dash.css'\r\nfunction Exchnage() {\r\n  \r\nreturn (\r\n        <React.Fragment>\r\n            <DashNav/>\r\n        <Paper elevation={3}>\r\n        <div className=\"body\">\r\n          <App/>\r\n        </div>\r\n        </Paper>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Exchnage\r\n","C:\\Users\\amanb\\Desktop\\LS\\frontend\\src\\screens\\SignUp\\password.js",["164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180"],"\r\nimport React,{useState,useRef} from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\n\r\nimport Container from '@material-ui/core/Container';\r\nimport {useForm} from 'react-hook-form'\r\nimport Signuptop from './components/signup-top';\r\nimport Signupbottom from './components/signup-bottom';\r\nimport {Link} from \"react-router-dom\";\r\nimport { registerUser } from '../../APi/api';\r\nimport { user } from '../../APi/userDetails';\r\nimport NavBar from '../NavBar'\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport jsPdf from 'jspdf'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport logo from '../../images/logo.png'\r\nimport below from '../../images/below.png'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      marginTop: theme.spacing(8),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    },\r\n    avatar: {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: theme.palette.secondary.main,\r\n      left:'30'\r\n    },\r\n    form: {\r\n      width: '100%', // Fix IE 11 issue.\r\n      marginTop: \"100\",\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n    },\r\n    \r\n  }));\r\n\r\n\r\n\r\nfunction Password() {\r\n\r\n    const classes = useStyles();\r\n    const { register, handleSubmit,errors,watch } = useForm();\r\n\r\n    const [pvtKey,setpvtKey] = useState(\"\")\r\n    const [er,seter] = useState(0);\r\n    const [svalue,setSvalue] = useState(0)\r\n    const onSubmit = async (data) => {\r\n        \r\n        const verify = await  registerUser(data.password,data.email);\r\n        \r\n        \r\n        setSvalue(1);\r\n        \r\n        setpvtKey(verify.pvtKey);\r\n        var doc = new jsPdf('p','pt');\r\n          doc.text(20,20,`This is your private key ${verify.pvtKey}`);\r\n          doc.setFont('courier');\r\n          doc.text(30,30, \"This pvt key is only genrated once so please do not loose it as it will be required at the time of login \");\r\n          doc.save(\"PrivateKey.pdf\")\r\n        \r\n        setTimeout(() => {\r\n          changeScreen()\r\n        }, 100000);\r\n        };\r\n\r\n        const changeScreen = ()=>{\r\n          window.location.href=\"/homepage\"\r\n        }\r\n        \r\n\r\n     const pdf =  () => { }\r\n     \r\n        const password = useRef({});\r\n        password.current = watch(\"password\", \"\");\r\n\r\n\r\n    return (\r\n      <React.Fragment>\r\n      { svalue ==1 ?<NavBar/>:\"\"}\r\n        <Grid container component=\"main\"container component=\"main\" className={classes.root}>\r\n        <CssBaseline />\r\n        <Grid item xs={false} sm={4} md={7} className=\"left-side\"  >\r\n      <img src={logo} alt=\"Below image\" className=\"logo\"/> <br/>\r\n        <img src={below} alt=\"Below image\" className=\"below\"/>\r\n      </Grid>\r\n      <Grid item xs={12} sm={8} md={5} elevation={2} square className=\"right-side\">\r\n        <div className=\"right\">\r\n        <Avatar className=\"avatar\"  >\r\n            <LockOutlinedIcon className=\"icon\" />\r\n          </Avatar>\r\n          <h1 className=\"titles\">Password</h1>\r\n            <form className={classes.form} onSubmit={handleSubmit(onSubmit)} noValidate>\r\n                <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                className=\"textFeilds\"\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"off\"\r\n                autoFocus\r\n                inputRef={register({\r\n                required: true,\r\n                pattern: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n                message:\"Please enter a valid email id\"\r\n              })}\r\n                  />\r\n            <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                className=\"textFeilds\"\r\n                id=\"password\"\r\n                label=\"Password\"\r\n                name=\"password\"\r\n                autoComplete=\"off\"\r\n                autoFocus\r\n                inputRef={register({\r\n                    required: \"You must specify a password\",\r\n                    minLength: {\r\n                      value: 8,\r\n                      message: \"Password must have at least 8 characters\"\r\n                    }\r\n                  })}\r\n                />\r\n                {errors.password && <p>{errors.password.message}</p>}\r\n            <TextField\r\n                className=\"otp\"\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                \r\n                className=\"textFeilds\"\r\n                id=\"confirm-password\"\r\n                label=\"Confirm Password\"\r\n                name=\"confirm_Password\"\r\n                autoComplete=\"off\"\r\n               \r\n                inputRef={register({\r\n                  validate: value =>\r\n                    value === password.current || \"The passwords do not match\"\r\n                })}\r\n                />\r\n                {errors.confirm_Password && <p className=\"errors\">{errors.confirm_Password.message}</p>}\r\n                \r\n                <Button\r\n                    type=\"submit\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className=\"submits\"\r\n                    onClick={()=>{setSvalue(1)}}\r\n                >\r\n                   Set Password\r\n                </Button>\r\n                {/* <Button \r\n                    fullWidth \r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick ={pdf()}\r\n                    >\r\n                    Download Pvt Key\r\n                    </Button> */}\r\n                <h3>Your private key is <span>{pvtKey}</span></h3>\r\n                <h4>Please use the pvt key generated just now to login.Keep the pvt key secure as it is only generated once.</h4>\r\n             \r\n\r\n            </form>     \r\n        </div>\r\n        </Grid>\r\n        </Grid>\r\n        \r\n        \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Password\r\n//f89d895b49201b61b61ae55d25f0ca90c3669ee4dfed07a99bef65055767295e","C:\\Users\\amanb\\Desktop\\LS\\frontend\\src\\screens\\Dashboard\\Admin Dashboard\\admin.js",["181"],"import React,{useState} from 'react'\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { Button } from '@material-ui/core';\r\nimport  useStyles from '../../styles'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { useForm } from 'react-hook-form'\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AdminNav from './adminNav'\r\nimport './admin.css'\r\n\r\nfunction Admin() {\r\n    \r\n    const [open, setOpen] = useState(false);\r\n    const [userArray,setuserArray] = useState([]);\r\n\r\n    const { register, handleSubmit } = useForm();\r\n    const StyledButton = withStyles({\r\n        root: {\r\n          background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n          borderRadius: 3,\r\n          border: 0,\r\n          color: 'white',\r\n          height: 48,\r\n          padding: '0 30px',\r\n          boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n          left:'40%',\r\n          margin:'30px'\r\n        },\r\n        label: {\r\n          textTransform: 'capitalize',\r\n        },\r\n      })(Button);\r\n    const classes = useStyles();\r\n      const handleClickOpen = () => {\r\n         setOpen(true);};\r\n    \r\n      const handleClose = () => { // handling popover\r\n        setOpen(false); };\r\n\r\n        const onSubmit= (data)=>{ // submitting the popver form\r\n            var  n = Number(userArray.length+1);\r\n            let obj = { \r\n                no:n,\r\n                email:data.email,\r\n                wallenNo:data.wnumber,\r\n                username:data.UserName,\r\n                currency:data.currency\r\n            }\r\n            setuserArray(oldArray=>[...oldArray,obj]);\r\n            \r\n    \r\n        }\r\n\r\n    \r\n    return (\r\n        <div>\r\n            <AdminNav/>\r\n            \r\n               <div> \r\n\r\n               <TableContainer component={Paper} style={{ justifyContent:'center'}}  className={classes.tableMain}>\r\n                    <Table className={classes.table} aria-label=\"simple table\" classes=\"styled-table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>No.</TableCell>\r\n                                <TableCell align=\"centre\">User Email</TableCell>\r\n                                <TableCell align=\"centre\">Wallet No</TableCell>\r\n                                <TableCell align=\"centre\">User Name</TableCell>\r\n                                <TableCell align=\"centre\">Currency</TableCell>\r\n\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {userArray.map((row,index)=>(\r\n                                <TableRow key={row.no}  style ={ index % 2? { background : \"#fdffe0\" }:{ background : \"white\" }}>\r\n                                    <TableCell component=\"th\" scope=\"row\">\r\n                                    {row.no}\r\n                                </TableCell>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    {row.email}\r\n                                </TableCell>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    {row.wallenNo}\r\n                                </TableCell>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    {row.username}\r\n                                </TableCell>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    {row.currency}\r\n                                </TableCell>\r\n                                </TableRow>\r\n                                \r\n                            ))}\r\n                        </TableBody>\r\n                        </Table>\r\n                        </TableContainer>\r\n\r\n                        {/* Popover starts here-----------------------------------------------------------------------------------------------------------*/}\r\n                        <StyledButton onClick={handleClickOpen}> Add Users</StyledButton>\r\n                        \r\n                                    <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                                        <DialogTitle id=\"form-dialog-title\">User Details</DialogTitle>\r\n                                        <DialogContent>\r\n                                        <DialogContentText>Please fill up all the details mentioned below</DialogContentText>\r\n                                        <form  onSubmit={handleSubmit(onSubmit)}>\r\n                                       \r\n                                        <TextField\r\n                                            autoFocus\r\n                                            variant=\"outlined\"\r\n                                            id=\"outlined-basic\"\r\n                                            autoFocus\r\n                                            className={classes.textF}\r\n                                            label=\"Email Address\"\r\n                                            type=\"email\"\r\n                                            name=\"email\"\r\n                                            inputRef={register({ required: true })}\r\n                                            fullWidth\r\n                                        />\r\n                                        <TextField\r\n                                           variant=\"outlined\"\r\n                                            id=\"outlined-basic\"\r\n                                            className={classes.textF}\r\n                                            label=\"Wallet Number\"\r\n                                            type=\"number\"\r\n                                            name=\"wnumber\"\r\n                                            inputRef={register({ required: true })}\r\n                                            fullWidth\r\n                                        />\r\n                                        <TextField\r\n                                            variant=\"outlined\"\r\n                                            id=\"outlined-basic\"\r\n                                            label=\"User Name\"\r\n                                            className={classes.textF}\r\n                                            type=\"text\"\r\n                                            name=\"UserName\"\r\n                                            inputRef={register({ required: true })}\r\n                                            fullWidth\r\n                                        />\r\n                                        <TextField\r\n                                            variant=\"outlined\"\r\n                                            id=\"outlined-basic\"\r\n                                            label=\"Currency\"\r\n                                            className={classes.textF}\r\n                                            type=\"text\"\r\n                                            name=\"currency\"\r\n                                            inputRef={register({ required: true })}\r\n                                            fullWidth\r\n                                        />\r\n                                             \r\n                                            <Button\r\n                                                type=\"submit\"\r\n                                                fullWidth\r\n                                                className={classes.btn}\r\n                                                onClick ={handleClose}>\r\n                                                Add user\r\n                                            </Button>\r\n                                        </form>\r\n                                        </DialogContent>\r\n                                        \r\n                                </Dialog>\r\n               </div>\r\n                    \r\n                \r\n                \r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Admin\r\n","C:\\Users\\amanb\\Desktop\\LS\\frontend\\src\\screens\\LogIn\\Login.js",["182","183","184","185","186","187"],"C:\\Users\\amanb\\Desktop\\LS\\frontend\\src\\screens\\Dashboard\\Regular Dashboards\\TransferMoney.js",["188"],"import React, { useState } from 'react'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport useStyles from '../../styles'\r\nimport DashNav from './DashNav'\r\nimport { useForm } from 'react-hook-form'\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { Button, Dialog, DialogContent } from '@material-ui/core';\r\nimport Login from '../../LogIn/Login';\r\nimport './dash.css'\r\n\r\n\r\nfunction TransferMoney() {\r\n \r\n  const { register, handleSubmit } = useForm();\r\n  const [currency, setCurrency] = useState('EUR');\r\n  const [currency1, setCurrency1] = useState('EUR');\r\n  const [value, setValue] = useState('');\r\n  const [open, setOpen] = useState(false)\r\n\r\n  const currencies = [\r\n    {\r\n      value: 'USD',\r\n      label: '$-(Dollars)',\r\n\r\n    },\r\n    {\r\n      value: 'EUR',\r\n      label: '€-(EURO)',\r\n    },\r\n    {\r\n      value: 'BTC',\r\n      label: '฿-(Bitcoin)',\r\n    },\r\n    {\r\n      value: 'JPY',\r\n      label: '¥-(YEN)',\r\n    },\r\n    {\r\n      value: 'INR',\r\n      label: '₹-(Ruppees)',\r\n    },\r\n    {\r\n      value: 'ETH',\r\n      label: 'Ξ-(Etherium)',\r\n    },\r\n  ];\r\n\r\n  const handleClose = () => {\r\n    setOpen(false)\r\n  }\r\n  const handleChange = (event) => {\r\n    setCurrency(event.target.value);\r\n  };\r\n  const handleChange1 = (event) => {\r\n    setCurrency1(event.target.value);\r\n  };\r\n  const handleValue = (event) => {\r\n    var n = Number(event.target.value);\r\n    var res = Number(n + n * 0.001);\r\n    setValue(res);\r\n\r\n  }\r\n  const onSubmit = (data) => {\r\n    data.amount = value;\r\n    data.senderCurrency = currency;\r\n    data.reciverCurrency = currency1;\r\n    \r\n    setOpen(true)\r\n  }\r\n  const size = 400;\r\n  return (\r\n    <React.Fragment>\r\n      <DashNav />\r\n      <div className=\"sender\">\r\n\r\n\r\n        \r\n        <form className=\"form\"  noValidate autoComplete=\"off\" onSubmit={handleSubmit(onSubmit)}>\r\n        <h2>SENDER</h2>\r\n          <TextField id=\"outlined-full-width\" label=\"Email\" style={{ width: size }} variant=\"outlined\" name=\"email\" inputRef={register({ required: true })} autoFocus className=\"textFeild\"/>\r\n          <TextField id=\"outlined-full-width\" label=\"Acc.No\" style={{ width: size }} variant=\"outlined\" name=\"sacc\" inputRef={register({ required: true })} className=\"textFeild\"/>\r\n            <TextField\r\n              id=\"outlined-select-currency\"\r\n              select\r\n              label=\"Select\"\r\n              inputRef={register({ required: true })}\r\n              style={{ width: size }}\r\n              value={currency}\r\n              onChange={handleChange}\r\n              name=\"curr\"\r\n              helperText=\"Please select your currency\"\r\n              variant=\"outlined\"\r\n            >\r\n              {currencies.map((option) => (\r\n                <MenuItem key={option.value} value={option.value}>\r\n                  {option.label}\r\n                </MenuItem>\r\n              ))}\r\n            </TextField>\r\n         \r\n          <div><h2>Reciever</h2></div>\r\n\r\n\r\n          <TextField id=\"outlined-basic\" label=\"Email\" variant=\"outlined\" style={{ width: size }} name=\"remail\" inputRef={register({ required: true })} className=\"textFeild\"/>\r\n          <TextField id=\"outlined-basic\" label=\"Acc.No\" variant=\"outlined\" style={{ width: size }} name=\"racc\" inputRef={register({ required: true })} className=\"textFeild\"/>\r\n          <TextField\r\n            id=\"outlined-select-currency\"\r\n            select\r\n            label=\"Select\"\r\n            value={currency1}\r\n            onChange={handleChange1}\r\n            helperText=\"Please select your currency\"\r\n            variant=\"outlined\"\r\n            style={{ width: size }}\r\n            inputRef={register({ required: true })}\r\n            name=\"recurr\"\r\n\r\n          >\r\n            {currencies.map((option) => (\r\n              <MenuItem key={option.value} value={option.value}>\r\n                {option.label}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n              <br/>\r\n              <h2>Message to be sent</h2>\r\n              \r\n              <TextField\r\n                id=\"outlined-full-width\"\r\n                label=\"Message\"\r\n                style={{ margin: 8 }}\r\n                placeholder=\"Why did you transfer money?\"\r\n                className=\"msgBox\"\r\n                margin=\"normal\"\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                variant=\"outlined\"\r\n        />\r\n                <br/>\r\n                \r\n              <h2>Amount to be Transferred</h2>\r\n\r\n          <TextField\r\n            inputProps={{ inputMode: 'numeric', pattern: '[0-9]*' }}\r\n            id=\"outlined-name\"\r\n            label=\"Amount\"\r\n            style={{ width: size }}\r\n            onChange={handleValue}\r\n            inputRef={register({ required: true })} variant=\"outlined\"\r\n            type=\"number\"\r\n            className=\"textFeild\"\r\n          />\r\n          <TextField\r\n            id=\"filled-read-only-input\"\r\n            type=\"number\"\r\n            label=\"Amount after tax\"\r\n            value={value}\r\n            className=\"textFeild\"      \r\n            style={{ width: size }}\r\n            variant=\"outlined\"\r\n          />\r\n          <br/>\r\n          <Button\r\n            type=\"submit\"\r\n           \r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className=\"submit1\"\r\n           >\r\n            Send\r\n            </Button>\r\n\r\n          <Dialog open={open} onClose={handleClose}>\r\n            <DialogContent>\r\n              <Login NotNavBar={true} transaction={{amount: value}}/>\r\n            </DialogContent>\r\n          </Dialog>\r\n        </form>\r\n\r\n\r\n\r\n\r\n\r\n      </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default TransferMoney\r\n","C:\\Users\\amanb\\Desktop\\LS\\frontend\\src\\data.js",[],"C:\\Users\\amanb\\Desktop\\LS\\frontend\\src\\screens\\SignUp\\components\\signup-bottom.js",["189"],"import React from 'react'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {Link,withRouter } from 'react-router-dom'\r\n\r\n\r\nfunction Signupbottom(props) {\r\n    return (\r\n        <Grid container>\r\n        <Grid item xs>\r\n          <Link to=\"#\" variant=\"body2\">\r\n            Forgot password?\r\n          </Link>\r\n        </Grid>\r\n        <Grid item>\r\n          <Link to=\"/\" variant=\"body2\">\r\n            {props.text}\r\n          </Link>\r\n        </Grid>\r\n      </Grid>\r\n    )\r\n}\r\n\r\nexport default  Signupbottom\r\n","C:\\Users\\amanb\\Desktop\\LS\\frontend\\src\\screens\\NavBar.js",["190","191","192"],"import React from 'react'\r\nimport { AppBar, Toolbar } from \"@material-ui/core\"\r\nimport {  IconButton } from \"@material-ui/core\"\r\nimport { Home } from \"@material-ui/icons\"\r\nimport Typography from '@material-ui/core/Typography';\r\nimport useStyles from './styles'\r\nimport Button from '@material-ui/core/Button';\r\nimport {Link,withRouter } from 'react-router-dom'\r\n\r\n\r\nfunction NavBar() {\r\n    const classes = useStyles();\r\n    return (\r\n        <AppBar position=\"static\">\r\n            <Toolbar>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n               LS&CG\r\n            </Typography>\r\n            \r\n         \r\n        <Button component ={Link} to='' className={classes.link}>Login</Button>\r\n\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}\r\n\r\nexport default NavBar\r\n","C:\\Users\\amanb\\Desktop\\LS\\frontend\\src\\screens\\styles.js",[],"C:\\Users\\amanb\\Desktop\\LS\\frontend\\src\\screens\\SignUp\\components\\signup-top.js",["193","194","195"],"import React from 'react'\r\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      marginTop: theme.spacing(8),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    },\r\n    avatar: {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n      width: '100%', // Fix IE 11 issue.\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n    },\r\n  }));\r\n\r\nfunction Signuptop(props) {\r\n    const classes = useStyles();\r\n\r\n    return(\r\n        <div>\r\n        \r\n          <Typography component=\"h1\" variant=\"h5\">\r\n           <h1>Verify email</h1>\r\n          </Typography>\r\n          </div>\r\n    )\r\n}\r\n\r\nexport default Signuptop\r\n","C:\\Users\\amanb\\Desktop\\LS\\frontend\\src\\screens\\Dashboard\\Regular Dashboards\\DashNav.js",[],"C:\\Users\\amanb\\Desktop\\LS\\frontend\\src\\screens\\Dashboard\\Regular Dashboards\\CurrencyRates.js",[],"C:\\Users\\amanb\\Desktop\\LS\\frontend\\src\\APi\\userDetails.js",[],"C:\\Users\\amanb\\Desktop\\LS\\frontend\\src\\screens\\Dashboard\\Admin Dashboard\\adminNav.js",[],"C:\\Users\\amanb\\Desktop\\LS\\frontend\\src\\screens\\Dashboard\\Regular Dashboards\\Currency Exchange\\CurrencyExchange.js",["196","197"],"import React, { useEffect, useState } from 'react';\r\nimport { useForm } from 'react-hook-form'\r\nimport useStyles from '../../../styles'\r\nimport CurrencyRow from './CurrencyRow'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Button  } from '@material-ui/core';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport './styles.css'\r\nconst BASE_URL = 'https://api.exchangeratesapi.io/latest'\r\n\r\nfunction App() {\r\n  \r\n  const [currencyOptions, setCurrencyOptions] = useState([])\r\n  const [fromCurrency, setFromCurrency] = useState()\r\n  const [toCurrency, setToCurrency] = useState()\r\n  const [exchangeRate, setExchangeRate] = useState()\r\n  const [amount, setAmount] = useState(1)\r\n  const [amountInFromCurrency, setAmountInFromCurrency] = useState(true)\r\n  const { register, handleSubmit } = useForm();\r\n  const classes = useStyles();\r\n  const onSubmit = (data)=>{\r\n    data.toCurrency = toCurrency;\r\n    data.fromCurrency = fromCurrency\r\n    data.fromAmount = fromAmount;\r\n    data.toAmount = toAmount;\r\n    \r\n  }\r\n  const styles = {\r\n\r\n    largeIcon: {\r\n      width: 60,\r\n      height: 60,\r\n    },\r\n  \r\n  };\r\n\r\n  const size =400;\r\n  let toAmount, fromAmount\r\n  if (amountInFromCurrency) {\r\n    fromAmount = amount\r\n    toAmount = amount * exchangeRate\r\n  } else {\r\n    toAmount = amount\r\n    fromAmount = amount / exchangeRate\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetch(BASE_URL)\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        const firstCurrency = Object.keys(data.rates)[0]\r\n        setCurrencyOptions([data.base, ...Object.keys(data.rates)])\r\n        setFromCurrency(data.base)\r\n        setToCurrency(firstCurrency)\r\n        setExchangeRate(data.rates[firstCurrency])\r\n      })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (fromCurrency != null && toCurrency != null) {\r\n      fetch(`${BASE_URL}?base=${fromCurrency}&symbols=${toCurrency}`)\r\n        .then(res => res.json())\r\n        .then(data => setExchangeRate(data.rates[toCurrency]))\r\n    }\r\n  }, [fromCurrency, toCurrency])\r\n\r\n  function handleFromAmountChange(e) {\r\n    setAmount(e.target.value)\r\n    setAmountInFromCurrency(true)\r\n  }\r\n\r\n  function handleToAmountChange(e) {\r\n    setAmount(e.target.value)\r\n    setAmountInFromCurrency(false)\r\n  }\r\n  \r\n  return (\r\n    <>\r\n      <div className=\"background\">\r\n        <form className=\"forms\" noValidate autoComplete=\"off\" onSubmit={handleSubmit(onSubmit)}>\r\n        <TextField id=\"outlined-full-width\" label=\"Email\" type=\"email\" style={{ width: size }} variant=\"outlined\" name=\"email\" inputRef={register({ required: true })} autoFocus className=\"email\"/>\r\n        <TextField id=\"outlined-full-width\" label=\"Acc.No\" style={{ width: size }} variant=\"outlined\" name=\"acountNumber\" inputRef={register({ required: true })} className=\"email\" />\r\n        \r\n      <CurrencyRow\r\n        currencyOptions={currencyOptions}\r\n        selectedCurrency={fromCurrency}\r\n        onChangeCurrency={e => setFromCurrency(e.target.value)}\r\n        onChangeAmount={handleFromAmountChange}\r\n        amount={fromAmount}\r\n        helperText = \"Currency you wish to be exchanged\"\r\n        currency = {fromCurrency}\r\n      />\r\n      <ArrowDownwardIcon className=\"arrow\"/>\r\n      <CurrencyRow\r\n        currencyOptions={currencyOptions}\r\n        selectedCurrency={toCurrency}\r\n        onChangeCurrency={e => setToCurrency(e.target.value)}\r\n        onChangeAmount={handleToAmountChange}\r\n        amount={toAmount}\r\n        helperText = \"Currency in which you want\"\r\n        currency = {toCurrency}\r\n      />\r\n       <Button\r\n            type=\"submit\"\r\n            \r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className=\"submit\">\r\n            Send\r\n            </Button>\r\n      </form>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;","C:\\Users\\amanb\\Desktop\\LS\\frontend\\src\\APi\\api.js",[],"C:\\Users\\amanb\\Desktop\\LS\\frontend\\src\\screens\\Dashboard\\Regular Dashboards\\Currency Exchange\\CurrencyRow.js",[],"C:\\Users\\amanb\\Desktop\\LS\\frontend\\src\\screens\\Dashboard\\Regular Dashboards\\Chart.js",[],{"ruleId":"198","replacedBy":"199"},{"ruleId":"200","replacedBy":"201"},{"ruleId":"202","severity":1,"message":"203","line":2,"column":8,"nodeType":"204","messageId":"205","endLine":2,"endColumn":13},{"ruleId":"202","severity":1,"message":"206","line":7,"column":8,"nodeType":"204","messageId":"205","endLine":7,"endColumn":14},{"ruleId":"202","severity":1,"message":"207","line":12,"column":8,"nodeType":"204","messageId":"205","endLine":12,"endColumn":14},{"ruleId":"202","severity":1,"message":"208","line":2,"column":8,"nodeType":"204","messageId":"205","endLine":2,"endColumn":14},{"ruleId":"202","severity":1,"message":"209","line":7,"column":8,"nodeType":"204","messageId":"205","endLine":7,"endColumn":13},{"ruleId":"202","severity":1,"message":"210","line":18,"column":10,"nodeType":"204","messageId":"205","endLine":18,"endColumn":19},{"ruleId":"202","severity":1,"message":"211","line":65,"column":34,"nodeType":"204","messageId":"205","endLine":65,"endColumn":40},{"ruleId":"212","severity":1,"message":"213","line":70,"column":27,"nodeType":"214","messageId":"215","endLine":70,"endColumn":29},{"ruleId":"216","severity":1,"message":"217","line":93,"column":7,"nodeType":"218","endLine":93,"endColumn":59},{"ruleId":"216","severity":1,"message":"217","line":94,"column":9,"nodeType":"218","endLine":94,"endColumn":63},{"ruleId":"219","severity":1,"message":"220","line":114,"column":36,"nodeType":"221","messageId":"222","endLine":114,"endColumn":37,"suggestions":"223"},{"ruleId":"219","severity":1,"message":"220","line":114,"column":61,"nodeType":"221","messageId":"222","endLine":114,"endColumn":62,"suggestions":"224"},{"ruleId":"202","severity":1,"message":"225","line":1,"column":15,"nodeType":"204","messageId":"205","endLine":1,"endColumn":23},{"ruleId":"202","severity":1,"message":"226","line":5,"column":8,"nodeType":"204","messageId":"205","endLine":5,"endColumn":17},{"ruleId":"202","severity":1,"message":"227","line":10,"column":8,"nodeType":"204","messageId":"205","endLine":10,"endColumn":14},{"ruleId":"212","severity":1,"message":"213","line":27,"column":23,"nodeType":"214","messageId":"215","endLine":27,"endColumn":25},{"ruleId":"219","severity":1,"message":"220","line":60,"column":46,"nodeType":"221","messageId":"222","endLine":60,"endColumn":47,"suggestions":"228"},{"ruleId":"219","severity":1,"message":"220","line":60,"column":71,"nodeType":"221","messageId":"222","endLine":60,"endColumn":72,"suggestions":"229"},{"ruleId":"212","severity":1,"message":"213","line":63,"column":23,"nodeType":"214","messageId":"215","endLine":63,"endColumn":25},{"ruleId":"216","severity":1,"message":"217","line":77,"column":7,"nodeType":"218","endLine":77,"endColumn":59},{"ruleId":"216","severity":1,"message":"217","line":78,"column":9,"nodeType":"218","endLine":78,"endColumn":63},{"ruleId":"230","severity":1,"message":"231","line":93,"column":15,"nodeType":"232","endLine":93,"endColumn":27},{"ruleId":"202","severity":1,"message":"233","line":2,"column":8,"nodeType":"204","messageId":"205","endLine":2,"endColumn":21},{"ruleId":"202","severity":1,"message":"234","line":3,"column":8,"nodeType":"204","messageId":"205","endLine":3,"endColumn":15},{"ruleId":"202","severity":1,"message":"225","line":1,"column":15,"nodeType":"204","messageId":"205","endLine":1,"endColumn":23},{"ruleId":"202","severity":1,"message":"235","line":4,"column":8,"nodeType":"204","messageId":"205","endLine":4,"endColumn":20},{"ruleId":"202","severity":1,"message":"226","line":10,"column":8,"nodeType":"204","messageId":"205","endLine":10,"endColumn":17},{"ruleId":"202","severity":1,"message":"236","line":12,"column":8,"nodeType":"204","messageId":"205","endLine":12,"endColumn":15},{"ruleId":"202","severity":1,"message":"237","line":14,"column":9,"nodeType":"204","messageId":"205","endLine":14,"endColumn":21},{"ruleId":"202","severity":1,"message":"211","line":21,"column":37,"nodeType":"204","messageId":"205","endLine":21,"endColumn":43},{"ruleId":"212","severity":1,"message":"213","line":32,"column":24,"nodeType":"214","messageId":"215","endLine":32,"endColumn":26},{"ruleId":"216","severity":1,"message":"217","line":57,"column":11,"nodeType":"218","endLine":57,"endColumn":63},{"ruleId":"216","severity":1,"message":"217","line":58,"column":13,"nodeType":"218","endLine":58,"endColumn":67},{"ruleId":"230","severity":1,"message":"231","line":83,"column":23,"nodeType":"232","endLine":83,"endColumn":40},{"ruleId":"202","severity":1,"message":"209","line":5,"column":8,"nodeType":"204","messageId":"205","endLine":5,"endColumn":13},{"ruleId":"212","severity":1,"message":"213","line":54,"column":22,"nodeType":"214","messageId":"215","endLine":54,"endColumn":24},{"ruleId":"216","severity":1,"message":"217","line":72,"column":7,"nodeType":"218","endLine":72,"endColumn":59},{"ruleId":"216","severity":1,"message":"217","line":73,"column":9,"nodeType":"218","endLine":73,"endColumn":63},{"ruleId":"230","severity":1,"message":"231","line":87,"column":23,"nodeType":"232","endLine":87,"endColumn":40},{"ruleId":"230","severity":1,"message":"231","line":102,"column":23,"nodeType":"232","endLine":102,"endColumn":40},{"ruleId":"202","severity":1,"message":"225","line":1,"column":15,"nodeType":"204","messageId":"205","endLine":1,"endColumn":23},{"ruleId":"202","severity":1,"message":"226","line":10,"column":8,"nodeType":"204","messageId":"205","endLine":10,"endColumn":17},{"ruleId":"202","severity":1,"message":"238","line":12,"column":8,"nodeType":"204","messageId":"205","endLine":12,"endColumn":17},{"ruleId":"202","severity":1,"message":"235","line":13,"column":8,"nodeType":"204","messageId":"205","endLine":13,"endColumn":20},{"ruleId":"202","severity":1,"message":"239","line":14,"column":9,"nodeType":"204","messageId":"205","endLine":14,"endColumn":13},{"ruleId":"202","severity":1,"message":"240","line":16,"column":10,"nodeType":"204","messageId":"205","endLine":16,"endColumn":14},{"ruleId":"202","severity":1,"message":"209","line":18,"column":8,"nodeType":"204","messageId":"205","endLine":18,"endColumn":13},{"ruleId":"202","severity":1,"message":"241","line":55,"column":12,"nodeType":"204","messageId":"205","endLine":55,"endColumn":14},{"ruleId":"202","severity":1,"message":"242","line":55,"column":15,"nodeType":"204","messageId":"205","endLine":55,"endColumn":20},{"ruleId":"202","severity":1,"message":"243","line":81,"column":12,"nodeType":"204","messageId":"205","endLine":81,"endColumn":15},{"ruleId":"212","severity":1,"message":"213","line":89,"column":16,"nodeType":"214","messageId":"215","endLine":89,"endColumn":18},{"ruleId":"230","severity":1,"message":"231","line":90,"column":41,"nodeType":"232","endLine":90,"endColumn":50},{"ruleId":"230","severity":1,"message":"231","line":90,"column":51,"nodeType":"232","endLine":90,"endColumn":67},{"ruleId":"216","severity":1,"message":"217","line":93,"column":7,"nodeType":"218","endLine":93,"endColumn":59},{"ruleId":"216","severity":1,"message":"217","line":94,"column":9,"nodeType":"218","endLine":94,"endColumn":63},{"ruleId":"219","severity":1,"message":"220","line":115,"column":36,"nodeType":"221","messageId":"222","endLine":115,"endColumn":37,"suggestions":"244"},{"ruleId":"219","severity":1,"message":"220","line":115,"column":61,"nodeType":"221","messageId":"222","endLine":115,"endColumn":62,"suggestions":"245"},{"ruleId":"230","severity":1,"message":"231","line":143,"column":17,"nodeType":"232","endLine":143,"endColumn":39},{"ruleId":"230","severity":1,"message":"231","line":121,"column":45,"nodeType":"232","endLine":121,"endColumn":54},{"ruleId":"202","severity":1,"message":"225","line":1,"column":17,"nodeType":"204","messageId":"205","endLine":1,"endColumn":25},{"ruleId":"202","severity":1,"message":"209","line":12,"column":8,"nodeType":"204","messageId":"205","endLine":12,"endColumn":13},{"ruleId":"202","severity":1,"message":"227","line":15,"column":8,"nodeType":"204","messageId":"205","endLine":15,"endColumn":14},{"ruleId":"202","severity":1,"message":"211","line":49,"column":35,"nodeType":"204","messageId":"205","endLine":49,"endColumn":41},{"ruleId":"219","severity":1,"message":"220","line":99,"column":34,"nodeType":"221","messageId":"222","endLine":99,"endColumn":35,"suggestions":"246"},{"ruleId":"219","severity":1,"message":"220","line":99,"column":59,"nodeType":"221","messageId":"222","endLine":99,"endColumn":60,"suggestions":"247"},{"ruleId":"202","severity":1,"message":"248","line":3,"column":8,"nodeType":"204","messageId":"205","endLine":3,"endColumn":17},{"ruleId":"202","severity":1,"message":"249","line":3,"column":14,"nodeType":"204","messageId":"205","endLine":3,"endColumn":24},{"ruleId":"202","severity":1,"message":"250","line":3,"column":11,"nodeType":"204","messageId":"205","endLine":3,"endColumn":21},{"ruleId":"202","severity":1,"message":"251","line":4,"column":10,"nodeType":"204","messageId":"205","endLine":4,"endColumn":14},{"ruleId":"202","severity":1,"message":"249","line":8,"column":14,"nodeType":"204","messageId":"205","endLine":8,"endColumn":24},{"ruleId":"202","severity":1,"message":"252","line":2,"column":8,"nodeType":"204","messageId":"205","endLine":2,"endColumn":33},{"ruleId":"202","severity":1,"message":"208","line":6,"column":8,"nodeType":"204","messageId":"205","endLine":6,"endColumn":14},{"ruleId":"202","severity":1,"message":"253","line":30,"column":11,"nodeType":"204","messageId":"205","endLine":30,"endColumn":18},{"ruleId":"202","severity":1,"message":"253","line":20,"column":9,"nodeType":"204","messageId":"205","endLine":20,"endColumn":16},{"ruleId":"202","severity":1,"message":"254","line":28,"column":9,"nodeType":"204","messageId":"205","endLine":28,"endColumn":15},"no-native-reassign",["255"],"no-negated-in-lhs",["256"],"no-unused-vars","'LogIn' is defined but never used.","Identifier","unusedVar","'Verify' is defined but never used.","'Signup' is defined but never used.","'Avatar' is defined but never used.","'Paper' is defined but never used.","'Copyright' is defined but never used.","'errors' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["257","258"],["259","260"],"'useState' is defined but never used.","'Container' is defined but never used.","'NavBar' is defined but never used.",["261","262"],["263","264"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'CurrencyRates' is defined but never used.","'DashNav' is defined but never used.","'Signupbottom' is defined but never used.","'emailID' is defined but never used.","'verifiedData' is defined but never used.","'Signuptop' is defined but never used.","'Link' is defined but never used.","'user' is defined but never used.","'er' is assigned a value but never used.","'seter' is assigned a value but never used.","'pdf' is assigned a value but never used.",["265","266"],["267","268"],["269","270"],["271","272"],"'useStyles' is defined but never used.","'withRouter' is defined but never used.","'IconButton' is defined but never used.","'Home' is defined but never used.","'AccountCircleOutlinedIcon' is defined but never used.","'classes' is assigned a value but never used.","'styles' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"messageId":"273","fix":"274","desc":"275"},{"messageId":"276","fix":"277","desc":"278"},{"messageId":"273","fix":"279","desc":"275"},{"messageId":"276","fix":"280","desc":"278"},{"messageId":"273","fix":"281","desc":"275"},{"messageId":"276","fix":"282","desc":"278"},{"messageId":"273","fix":"283","desc":"275"},{"messageId":"276","fix":"284","desc":"278"},{"messageId":"273","fix":"285","desc":"275"},{"messageId":"276","fix":"286","desc":"278"},{"messageId":"273","fix":"287","desc":"275"},{"messageId":"276","fix":"288","desc":"278"},{"messageId":"273","fix":"289","desc":"275"},{"messageId":"276","fix":"290","desc":"278"},{"messageId":"273","fix":"291","desc":"275"},{"messageId":"276","fix":"292","desc":"278"},"removeEscape",{"range":"293","text":"294"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"295","text":"296"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"297","text":"294"},{"range":"298","text":"296"},{"range":"299","text":"294"},{"range":"300","text":"296"},{"range":"301","text":"294"},{"range":"302","text":"296"},{"range":"303","text":"294"},{"range":"304","text":"296"},{"range":"305","text":"294"},{"range":"306","text":"296"},{"range":"307","text":"294"},{"range":"308","text":"296"},{"range":"309","text":"294"},{"range":"310","text":"296"},[3140,3141],"",[3140,3140],"\\",[3165,3166],[3165,3165],[2021,2022],[2021,2021],[2046,2047],[2046,2046],[3752,3753],[3752,3752],[3777,3778],[3777,3777],[2612,2613],[2612,2612],[2637,2638],[2637,2637]]